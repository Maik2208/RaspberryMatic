--- occu/WebUI/www/rega/esp/controls/heating_control.fn.orig
+++ occu/WebUI/www/rega/esp/controls/heating_control.fn
@@ -4,11 +4,19 @@
   real rMin = 4.5;
   real rMax = 30.5;
   string sUnit = "&deg;<i>C</i>";
+  string bUnit = "V";
+  string vUnit = "%";
+  string hUnit = "%";
   integer iReadOnlyState = 0;
 
   object oControlMode = cObj.DPByControl("HEATING_CONTROL.CONTROL_MODE");
   object oLevel = cObj.DPByControl("HEATING_CONTROL.SETPOINT");
   object oTemperature = cObj.DPByControl("HEATING_CONTROL.TEMPERATURE");
+
+  object oBatteryState = cObj.DPByHssDP("BATTERY_STATE");
+  object oValveState = cObj.DPByHssDP("VALVE_STATE");  
+  object oHumidity = cObj.DPByHssDP("ACTUAL_HUMIDITY");                                                
+
   object oModeAuto = cObj.DPByControl("HEATING_CONTROL.AUTO");
   object oModeManu = cObj.DPByControl("HEATING_CONTROL.MANU");
   object oModeBoost = cObj.DPByControl("HEATING_CONTROL.BOOST");
@@ -28,12 +36,6 @@
 
   ! WriteLine(' <script>conInfo("oControlMode: '#oControlMode.Value()#'");</script> ');
 
-  if ( oTemperature )
-  {
-    ! WriteLine(' <script>conInfo("oTemperature: '#oTemperature.Value()#'");</script> ');
-    actTemp = oTemperature.Value();
-  }
-
   if( oLevel )
   {
     iLvlDpId = oLevel.ID();
@@ -47,13 +49,14 @@
     ! rMax = oLevel.MetaData("MAX").ToFloat();
   }
   string sReadOnly = "";
-
+  string cssDisplay = "; display: table;";
   integer iInvalidState = 0;
 
   if( ( system.GetVar("iStatusOnly" ) == 1) || iInvalidState )
   {
     sReadOnly = "disabled";
     iReadOnlyState = 1;
+    cssDisplay = "";
   }
 
   WriteLine("<tr>");
@@ -68,6 +71,48 @@
     WriteLine("</td>");
   WriteLine("</tr>");
 
+  if ( oHumidity )
+  {
+    WriteLine("<tr>");
+      WriteLine("<td>");
+        WriteLine("<table id='"#chnId#"tblShowHumidity' class='ControlBtnInfo hidden' style='width:200px"#cssDisplay#"'>");
+          WriteLine("<tr>");
+            WriteLine("<td>${stringTableWeatherHumidity}</td>");
+            WriteLine("<td><span id='"#chnId#"actHumidity'></span><span id='"#chnId#"actHumidityUnit' class='hidden'>&nbsp;<b>"#hUnit#"</b></span></td>");
+          WriteLine("</tr>");
+        WriteLine("</table>");
+      WriteLine("</td>");
+    WriteLine("</tr>");
+  }
+ 
+  if ( oBatteryState )
+  { 
+   WriteLine("<tr>");
+     WriteLine("<td>");
+       WriteLine("<table id='"#chnId#"tblShowBatteryState' class='ControlBtnInfo hidden' style='width:200px"#cssDisplay#"'>");
+         WriteLine("<tr>");
+           WriteLine("<td>${stringTableClimateControlRTTransceiverBatteryState}</td>");
+           WriteLine("<td><span id='"#chnId#"actBatteryState'></span><span><b>"#bUnit#"</b></span></td>");
+        WriteLine("</tr>");
+       WriteLine("</table>");
+     WriteLine("</td>");
+   WriteLine("</tr>");
+  }
+
+  if ( oValveState )
+  {  
+   WriteLine("<tr>");
+     WriteLine("<td>");
+       WriteLine("<table id='"#chnId#"tblShowValveState' class='ControlBtnInfo hidden' style='width:200px"#cssDisplay#"'>");
+         WriteLine("<tr>");
+           WriteLine("<td>${stringTableHeatingLevel}</td>");
+           WriteLine("<td><span id='"#chnId#"actValveState'></span><span><b>"#vUnit#"</b></span></td>");
+         WriteLine("</tr>");
+       WriteLine("</table>");
+     WriteLine("</td>");
+   WriteLine("</tr>");
+  }
+
   WriteLine("<tr>");
     WriteLine("<td colspan='1' id='slidCtrl"#cObj.ID()#"' class='CLASS02529'></td>");
     WriteLine("<td class='CLASS02529'>");
@@ -179,6 +224,24 @@
       WriteLine("opts.stTemp = "#oTemperature.Value()#";");
       WriteLine("opts.stUnit = '"#sUnit#"';");
     }
+    
+    if (oHumidity)
+    {
+      WriteLine("opts.stHum = "#oHumidity.Value()#";");
+      WriteLine("opts.sthUnit = '"#hUnit#"';");
+    }
+
+    if (oBatteryState)
+    {
+      WriteLine("opts.stBat = "#oBatteryState.Value()#";");
+      WriteLine("opts.stbUnit = '"#bUnit#"';");
+    }
+    
+    if (oValveState)
+    {
+      WriteLine("opts.stValve = "#oValveState.Value()#";");
+      WriteLine("opts.stvUnit = '"#vUnit#"';");
+    }
 
     WriteLine("its"#chnId#" = new iseThermostat_2ndGen("#chnId#", "#rState#", "#iLvlDpId#", "#rMin#", "#rMax#", " #system.GetVar("iReadOnlyState")#", "#system.GetVar('bSliderFlag')#", opts);");
   WriteLine("</script>");
@@ -205,6 +268,8 @@
 
   string tUnit = "&deg;<i>C</i>";
   string hUnit = "&#37;";
+  string bUnit = "V";
+  string vUnit = "%";
   string co2Unit = "ppm";
   string co2Value = "--";
   real rState = 0;
@@ -216,6 +281,12 @@
   object oLevel = cObj.DPByControl("HEATING_CONTROL_HMIP.LEVEL");
   object oHeatingCooling = cObj.DPByControl("HEATING_CONTROL_HMIP.HEATING_COOLING");
 
+  object oBatteryState = cObj.DPByHssDP("BATTERY_STATE");
+  object oValveLevel = oLevel;
+  if (!oLevel) {
+    oValveLevel = cObj.DPByHssDP("LEVEL");
+  }
+
   object oActiveProfile = cObj.DPByControl("HEATING_CONTROL_HMIP.ACTIVE_PROFILE");
   object oHumidity = cObj.DPByControl("HEATING_CONTROL_HMIP.HUMIDITY");
   object oSetPointMode = cObj.DPByControl("HEATING_CONTROL_HMIP.SETPOINT_MODE");
@@ -246,12 +317,6 @@
   }
 
 
-  if ( oTemperature )
-  {
-    ! WriteLine(' <script>conInfo("oTemperature: '#oTemperature.Value()#'");</script> ');
-    actTemp = oTemperature.Value();
-  }
-
   if (oCO2) {
     object oCO2Concentration = cObj.DPByControl("CARBON_DIOXIDE_RECEIVER.CONCENTRATION");
     object oCO2ConcentrationStatus = cObj.DPByControl("CARBON_DIOXIDE_RECEIVER.CONCENTRATION_STATUS");
@@ -360,13 +425,26 @@
       WriteLine("</table>");
     WriteLine("</td>");
 
-    if ((oLevel) && (oLevel.State() >= 0)) {
-      var level = oLevel.Value() * 100;
-       WriteLine("<td id='"#chnId#"tdLEVEL' >");
+    if (oValveLevel) {
+      WriteLine("<td id='"#chnId#"tdLEVEL'>");
         WriteLine("<table class='ControlBtnInfo' style='width:205px'>");
           WriteLine("<tr>");
-            WriteLine("<td  >${diagramValueTypeLEVEL}: </td>");
-            WriteLine("<td><span>"#level.ToString(0)#" %</span></td>");
+            WriteLine("<td id='"#chnId#"LEVEL'>${stringTableHeatingLevel}</td>");
+            WriteLine("<td><span id='"#chnId#"valLEVEL'></span><span><b>"#vUnit#"</b></span></td>");
+          WriteLine("</tr>");
+        WriteLine("</table>");
+      WriteLine("</td>");
+    }
+
+  WriteLine("</tr>");
+
+  WriteLine("<tr>");
+    if (oBatteryState) {
+      WriteLine("<td id='"#chnId#"tdBATTERY_STATE'>");
+        WriteLine("<table class='ControlBtnInfo' style='width:205px'>");
+          WriteLine("<tr>");
+            WriteLine("<td>${stringTableClimateControlRTTransceiverBatteryState}</td>");
+            WriteLine("<td><span id='"#chnId#"valBATTERY_STATE'></span><span><b>"#bUnit#"</b></span></td>");
           WriteLine("</tr>");
         WriteLine("</table>");
       WriteLine("</td>");
@@ -550,6 +628,14 @@
       WriteLine("opts.humidityID = '"#oHumidity.ID()#"';");
       WriteLine("opts.HUMIDITY = '"#oHumidity.Value()#"';");
     }
+    if (oBatteryState) {
+      WriteLine("opts.batteryStateID = '"#oBatteryState.ID()#"';");
+      WriteLine("opts.BATTERY_STATE = '"#oBatteryState.Value()#"';");
+    }
+    if (oValveLevel) {
+      WriteLine("opts.levelID = '"#oValveLevel.ID()#"';");
+      WriteLine("opts.LEVEL = '" # (oValveLevel.Value()*100).ToInteger() # "';");
+    }
     if (oWindowState) {
       WriteLine("opts.windowStateID = '"#oWindowState.ID()#"';");
       WriteLine("opts.WINDOW_STATE = '"#oWindowState.Value()#"';");
@@ -729,4 +815,4 @@
 
   WriteLine("</script>");
 
-}
\ No newline at end of file
+}
--- occu/WebUI/www/webui/webui.js.orig
+++ occu/WebUI/www/webui/webui.js
@@ -37361,6 +37361,15 @@
     if (this.opts.stTemp) {
       this.showActualTemp();
     }
+    if (this.opts.stHum) {                                            
+      this.showActualHumidity();                                      
+    }
+    if (this.opts.stBat) {
+      this.showActualBat();
+    }
+    if (this.opts.stValve !== null) {
+      this.showActualValve();
+    }
     if (this.opts.idComfort && this.opts.idLowering) {
       this.showComfortEco();
     }
@@ -37555,6 +37564,26 @@
     jQuery("#"+this.id +"tblShowTemp").show();
   },
 
+  showActualHumidity: function() {
+    if (parseInt(this.opts.stHum) === 20) {
+      jQuery("#"+this.id +"actHumidity").text('n/a');
+    } else {
+      jQuery("#"+this.id +"actHumidity").text(this.opts.stHum);
+      jQuery("#"+this.id +"actHumidityUnit").show();
+    }
+    jQuery("#"+this.id +"tblShowHumidity").show();
+  }, 
+
+  showActualBat: function() {
+    jQuery("#"+this.id +"actBatteryState").text(this.opts.stBat);
+    jQuery("#"+this.id +"tblShowBatteryState").show();
+  },
+  
+  showActualValve: function() {
+    jQuery("#"+this.id +"actValveState").text(this.opts.stValve);
+    jQuery("#"+this.id +"tblShowValveState").show();
+  },
+  
   showHolidayEndTime: function() {
     var stopTime = this.getHolidayEndTime();
     if (stopTime) {
@@ -37670,6 +37699,8 @@
     this.setSControl("ACTUAL_TEMPERATURE", this.ACTUAL_TEMPERATURE);
     this.setSControl("HUMIDITY", this.HUMIDITY);
     this.setSControl("WINDOW_STATE", this.WINDOW_STATE);
+    this.setSControl("BATTERY_STATE", this.BATTERY_STATE);
+    this.setSControl("LEVEL", this.LEVEL);
     this.setSlider();
     this.initElements();
     this.bindEvents();
@@ -37682,6 +37713,8 @@
     this.BOOST_MODE = (this.checkBool(opts.BOOST_MODE, false) == "true") ? true : false;
     //this.FROST_PROTECTION = opts.FROST_PROTECTION;
     this.HUMIDITY = this.checkValue(opts.HUMIDITY, this.unknownState);
+    this.BATTERY_STATE = this.checkValue(opts.BATTERY_STATE, this.unknownState);
+    this.LEVEL = this.checkValue(opts.LEVEL, this.unknownState);
     //this.PARTY_MODE = opts.PARTY_MODE;
     this.SET_POINT_MODE = this.checkValue(opts.SET_POINT_MODE, 0);
     this.SET_POINT_TEMPERATURE = this.checkValue(opts.SET_POINT_TEMPERATURE, 4.5);
